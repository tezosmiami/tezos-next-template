
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState, useEffect} from 'react'
import { usePassengerContext } from '../context/passenger-context'
// import { CheckoutForm } from '../components/checkout-form'
import { LightButton } from '../components/light-button'
import {Elements} from '@stripe/react-stripe-js';

import {loadStripe} from '@stripe/stripe-js';

const stripePromise = loadStripe(`${process.env.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}`);

export default function Home() {
  const [clientSecret, setClientSecret] = useState("");
  const app = usePassengerContext();

  useEffect(() => {
    // Check to see if this is a redirect back from Checkout
    const query = new URLSearchParams(window.location.search);
    if (query.get('success')) {
      console.log('Order placed! You will receive an email confirmation.');
    }

    if (query.get('canceled')) {
      console.log('Order canceled -- continue to shop around and checkout when youâ€™re ready.');
    }
  }, []);



  return (
    <>
      <Head>
        <title>Tezos Miami Next Template</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/tezosmiami.ico" />
      </Head>
      
      <header>
      {console.log(app)}
      {app.activeAccount && app.address.substr(0, 5) + "..." + app.address.substr(-5)}
      
      <button onClick={() => !app.activeAccount ? app.logIn() : app.logOut()}> 
      {!app.activeAccount ? "sync" : "unsync"}
      </button>

    </header>   
 
{app.address &&
    <form hidden={!app.address} action={`/api/stripe-checkout?address=${app.address}`} method="POST">
      <section>
        <button type="submit" role="link">
          Checkout
        </button>
      </section>
      <style jsx>
        {`
          section {

            display: flex;
            flex-direction: column;
            width: 400px;
            height: 112px;
            border-radius: 6px;
            justify-content: space-between;
          }
          button {
            height: 36px;
            background: #556cd6;
            border-radius: 4px;
            color: white;
            border: 0;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.2s ease;
            box-shadow: 0px 4px 5.5px 0px rgba(0, 0, 0, 0.07);
          }
          button:hover {
            opacity: 0.8;
          }
        `}
      </style>
    </form>}

    <footer>
    <LightButton/>
    </footer>
    
  </>
  )
}

